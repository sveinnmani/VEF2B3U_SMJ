1.)
For-loop er lykja sem hægt er að keyra oft. ForEach-loop tekur inn tvö parameter, ein breyta og eitt object. Síðan keyrir loopan fyrir hvern hlut sem er í objectinu. For-in loop keyrir í gegnum properties í object. For-of loop tekur breytu og fylki.

2.)
var divs = document.getElementsByTagName('div');	
for(var i = 0, div; div = divs[i]; i++)	{		
  div.setAttribute("style", "border: solid 3px black; ")	
}

3.)

4.)
var nyttmap = new Map();
nyttmap.set(1, "fyrsta");
nyttmap.set(2, "annað");
nyttmap.set(3, "þriðja");

nyttmap.forEach(x, key, mapObj){
  document.write(x.toString());
}

5.)

6.)
Föll nota yfirleitt breytur þegar kallað er á það, Closure er þegar fall er með innra fall sem getur notað breyturnar úr ytra fallinu.

//Sýnidæmi
"use strict"; //Þetta fer efst í skjalið
function ytraFall(breyta) { //Ytrafallið sem inniheldur staðværabreytu, innrafallið getur kallað á þessa breytu.
  let stadvaerbreyta = breyta; //Staðværa breytan sem fær gildið sem sett er inn í fallið.
  return function()  { //Ytrafallið skilar innrifalli
    return stadvaerbreyta;  //Innrafallið skilar staðværri breytu sem er inn í ytrafallinu
  }  
}

7.)
Arguments object er hægt að nota með falli ásamt færibreytum. Ekki þarf að fylla fallið af færibreytum.

//Sýnidæmi
"use strict"; //Þetta þarf að vera fyrir ofan svo kóðinn virkar
function argumentsMargfalda(tala1, tala2, tala3)  {
  arguments[1] = 1; //Hér er arguments 
  if(arguments.length == 1)  {  //Ef arguments lengdin er 1
    alert(tala1); //Kemur alert sem jafngildir breytunni tala1
  }
  else if(arguments.length == 2) {  //Annars ef arguments lengdin er 2
    alert(tala1 * tala2); //Kemur alert sem er tala1 margfaldað með tala2
  }
  else if(arguments.length == 3) {  //Annars ef arguments lengdin er 3
    alert(tala1 * tala2 * tala3); //Kemur alert sem er tala1, tala2 og tala3 margfölduð saman
  }
}
argumentsMargfalda(4, 4); //Þetta fall skilar tölunni 16 í alert

8.)
Function.prototype.bind = function(breyta){
  var numer = this;
  return numer;
};

9.)
